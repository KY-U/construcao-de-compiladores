// Generated from java-escape by ANTLR 4.11.1
package br.ufscar.dc.compiladores.linguagem.algoritmica;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class LinguagemAlgoritmicaLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		COMENTARIO=1, REAL=2, ALGORITMO=3, DECLARE=4, LITERAL=5, INTEIRO=6, LEIA=7, 
		ESCREVA=8, FIM_ALGORITMO=9, CADEIA=10, VIRGULA=11, MAIS=12, MENOS=13, 
		VEZES=14, DIV=15, ATRIB=16, NUM_INT=17, NUM_REAL=18, IDENT=19, WS=20, 
		OP_REL=21, DELIM=22, ABREPAR=23, FECHAPAR=24;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"COMENTARIO", "REAL", "ALGORITMO", "DECLARE", "LITERAL", "INTEIRO", "LEIA", 
			"ESCREVA", "FIM_ALGORITMO", "CADEIA", "VIRGULA", "MAIS", "MENOS", "VEZES", 
			"DIV", "ATRIB", "NUM_INT", "NUM_REAL", "IDENT", "ESC_SEQ", "WS", "OP_REL", 
			"DELIM", "ABREPAR", "FECHAPAR"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, "'real'", "'algoritmo'", "'declare'", "'literal'", "'inteiro'", 
			"'leia'", "'escreva'", "'fim_algoritmo'", null, "','", "'+'", "'-'", 
			"'*'", "'/'", "'<-'", null, null, null, null, null, "':'", "'('", "')'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "COMENTARIO", "REAL", "ALGORITMO", "DECLARE", "LITERAL", "INTEIRO", 
			"LEIA", "ESCREVA", "FIM_ALGORITMO", "CADEIA", "VIRGULA", "MAIS", "MENOS", 
			"VEZES", "DIV", "ATRIB", "NUM_INT", "NUM_REAL", "IDENT", "WS", "OP_REL", 
			"DELIM", "ABREPAR", "FECHAPAR"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public LinguagemAlgoritmicaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "LinguagemAlgoritmicaLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 20:
			WS_action((RuleContext)_localctx, actionIndex);
			break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:
			skip();
			break;
		}
	}

	public static final String _serializedATN =
		"\u0004\u0000\u0018\u00ca\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0001\u0000\u0001\u0000\u0005\u00006\b\u0000"+
		"\n\u0000\f\u00009\t\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001"+
		"\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001"+
		"\t\u0001\t\u0005\t\u0081\b\t\n\t\f\t\u0084\t\t\u0001\t\u0001\t\u0001\n"+
		"\u0001\n\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001"+
		"\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u0010\u0003"+
		"\u0010\u0096\b\u0010\u0001\u0010\u0004\u0010\u0099\b\u0010\u000b\u0010"+
		"\f\u0010\u009a\u0001\u0011\u0003\u0011\u009e\b\u0011\u0001\u0011\u0004"+
		"\u0011\u00a1\b\u0011\u000b\u0011\f\u0011\u00a2\u0001\u0011\u0001\u0011"+
		"\u0004\u0011\u00a7\b\u0011\u000b\u0011\f\u0011\u00a8\u0003\u0011\u00ab"+
		"\b\u0011\u0001\u0012\u0001\u0012\u0005\u0012\u00af\b\u0012\n\u0012\f\u0012"+
		"\u00b2\t\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014"+
		"\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015"+
		"\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0003\u0015\u00c3\b\u0015"+
		"\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018"+
		"\u0000\u0000\u0019\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005"+
		"\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019"+
		"\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0000)\u0014"+
		"+\u0015-\u0016/\u00171\u0018\u0001\u0000\u0006\u0001\u0000}}\u0001\u0000"+
		"\"\"\u0002\u0000++--\u0002\u0000AZaz\u0003\u000009AZaz\u0003\u0000\t\n"+
		"\r\r  \u00d6\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000"+
		"\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000"+
		"\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000"+
		"\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000"+
		"\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000"+
		"\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000"+
		"\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000"+
		"\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000"+
		"\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%"+
		"\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000"+
		"\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000"+
		"\u00001\u0001\u0000\u0000\u0000\u00013\u0001\u0000\u0000\u0000\u0003<"+
		"\u0001\u0000\u0000\u0000\u0005A\u0001\u0000\u0000\u0000\u0007K\u0001\u0000"+
		"\u0000\u0000\tS\u0001\u0000\u0000\u0000\u000b[\u0001\u0000\u0000\u0000"+
		"\rc\u0001\u0000\u0000\u0000\u000fh\u0001\u0000\u0000\u0000\u0011p\u0001"+
		"\u0000\u0000\u0000\u0013~\u0001\u0000\u0000\u0000\u0015\u0087\u0001\u0000"+
		"\u0000\u0000\u0017\u0089\u0001\u0000\u0000\u0000\u0019\u008b\u0001\u0000"+
		"\u0000\u0000\u001b\u008d\u0001\u0000\u0000\u0000\u001d\u008f\u0001\u0000"+
		"\u0000\u0000\u001f\u0091\u0001\u0000\u0000\u0000!\u0095\u0001\u0000\u0000"+
		"\u0000#\u009d\u0001\u0000\u0000\u0000%\u00ac\u0001\u0000\u0000\u0000\'"+
		"\u00b3\u0001\u0000\u0000\u0000)\u00b6\u0001\u0000\u0000\u0000+\u00c2\u0001"+
		"\u0000\u0000\u0000-\u00c4\u0001\u0000\u0000\u0000/\u00c6\u0001\u0000\u0000"+
		"\u00001\u00c8\u0001\u0000\u0000\u000037\u0005{\u0000\u000046\b\u0000\u0000"+
		"\u000054\u0001\u0000\u0000\u000069\u0001\u0000\u0000\u000075\u0001\u0000"+
		"\u0000\u000078\u0001\u0000\u0000\u00008:\u0001\u0000\u0000\u000097\u0001"+
		"\u0000\u0000\u0000:;\u0005}\u0000\u0000;\u0002\u0001\u0000\u0000\u0000"+
		"<=\u0005r\u0000\u0000=>\u0005e\u0000\u0000>?\u0005a\u0000\u0000?@\u0005"+
		"l\u0000\u0000@\u0004\u0001\u0000\u0000\u0000AB\u0005a\u0000\u0000BC\u0005"+
		"l\u0000\u0000CD\u0005g\u0000\u0000DE\u0005o\u0000\u0000EF\u0005r\u0000"+
		"\u0000FG\u0005i\u0000\u0000GH\u0005t\u0000\u0000HI\u0005m\u0000\u0000"+
		"IJ\u0005o\u0000\u0000J\u0006\u0001\u0000\u0000\u0000KL\u0005d\u0000\u0000"+
		"LM\u0005e\u0000\u0000MN\u0005c\u0000\u0000NO\u0005l\u0000\u0000OP\u0005"+
		"a\u0000\u0000PQ\u0005r\u0000\u0000QR\u0005e\u0000\u0000R\b\u0001\u0000"+
		"\u0000\u0000ST\u0005l\u0000\u0000TU\u0005i\u0000\u0000UV\u0005t\u0000"+
		"\u0000VW\u0005e\u0000\u0000WX\u0005r\u0000\u0000XY\u0005a\u0000\u0000"+
		"YZ\u0005l\u0000\u0000Z\n\u0001\u0000\u0000\u0000[\\\u0005i\u0000\u0000"+
		"\\]\u0005n\u0000\u0000]^\u0005t\u0000\u0000^_\u0005e\u0000\u0000_`\u0005"+
		"i\u0000\u0000`a\u0005r\u0000\u0000ab\u0005o\u0000\u0000b\f\u0001\u0000"+
		"\u0000\u0000cd\u0005l\u0000\u0000de\u0005e\u0000\u0000ef\u0005i\u0000"+
		"\u0000fg\u0005a\u0000\u0000g\u000e\u0001\u0000\u0000\u0000hi\u0005e\u0000"+
		"\u0000ij\u0005s\u0000\u0000jk\u0005c\u0000\u0000kl\u0005r\u0000\u0000"+
		"lm\u0005e\u0000\u0000mn\u0005v\u0000\u0000no\u0005a\u0000\u0000o\u0010"+
		"\u0001\u0000\u0000\u0000pq\u0005f\u0000\u0000qr\u0005i\u0000\u0000rs\u0005"+
		"m\u0000\u0000st\u0005_\u0000\u0000tu\u0005a\u0000\u0000uv\u0005l\u0000"+
		"\u0000vw\u0005g\u0000\u0000wx\u0005o\u0000\u0000xy\u0005r\u0000\u0000"+
		"yz\u0005i\u0000\u0000z{\u0005t\u0000\u0000{|\u0005m\u0000\u0000|}\u0005"+
		"o\u0000\u0000}\u0012\u0001\u0000\u0000\u0000~\u0082\u0005\"\u0000\u0000"+
		"\u007f\u0081\b\u0001\u0000\u0000\u0080\u007f\u0001\u0000\u0000\u0000\u0081"+
		"\u0084\u0001\u0000\u0000\u0000\u0082\u0080\u0001\u0000\u0000\u0000\u0082"+
		"\u0083\u0001\u0000\u0000\u0000\u0083\u0085\u0001\u0000\u0000\u0000\u0084"+
		"\u0082\u0001\u0000\u0000\u0000\u0085\u0086\u0005\"\u0000\u0000\u0086\u0014"+
		"\u0001\u0000\u0000\u0000\u0087\u0088\u0005,\u0000\u0000\u0088\u0016\u0001"+
		"\u0000\u0000\u0000\u0089\u008a\u0005+\u0000\u0000\u008a\u0018\u0001\u0000"+
		"\u0000\u0000\u008b\u008c\u0005-\u0000\u0000\u008c\u001a\u0001\u0000\u0000"+
		"\u0000\u008d\u008e\u0005*\u0000\u0000\u008e\u001c\u0001\u0000\u0000\u0000"+
		"\u008f\u0090\u0005/\u0000\u0000\u0090\u001e\u0001\u0000\u0000\u0000\u0091"+
		"\u0092\u0005<\u0000\u0000\u0092\u0093\u0005-\u0000\u0000\u0093 \u0001"+
		"\u0000\u0000\u0000\u0094\u0096\u0007\u0002\u0000\u0000\u0095\u0094\u0001"+
		"\u0000\u0000\u0000\u0095\u0096\u0001\u0000\u0000\u0000\u0096\u0098\u0001"+
		"\u0000\u0000\u0000\u0097\u0099\u000209\u0000\u0098\u0097\u0001\u0000\u0000"+
		"\u0000\u0099\u009a\u0001\u0000\u0000\u0000\u009a\u0098\u0001\u0000\u0000"+
		"\u0000\u009a\u009b\u0001\u0000\u0000\u0000\u009b\"\u0001\u0000\u0000\u0000"+
		"\u009c\u009e\u0007\u0002\u0000\u0000\u009d\u009c\u0001\u0000\u0000\u0000"+
		"\u009d\u009e\u0001\u0000\u0000\u0000\u009e\u00a0\u0001\u0000\u0000\u0000"+
		"\u009f\u00a1\u000209\u0000\u00a0\u009f\u0001\u0000\u0000\u0000\u00a1\u00a2"+
		"\u0001\u0000\u0000\u0000\u00a2\u00a0\u0001\u0000\u0000\u0000\u00a2\u00a3"+
		"\u0001\u0000\u0000\u0000\u00a3\u00aa\u0001\u0000\u0000\u0000\u00a4\u00a6"+
		"\u0005.\u0000\u0000\u00a5\u00a7\u000209\u0000\u00a6\u00a5\u0001\u0000"+
		"\u0000\u0000\u00a7\u00a8\u0001\u0000\u0000\u0000\u00a8\u00a6\u0001\u0000"+
		"\u0000\u0000\u00a8\u00a9\u0001\u0000\u0000\u0000\u00a9\u00ab\u0001\u0000"+
		"\u0000\u0000\u00aa\u00a4\u0001\u0000\u0000\u0000\u00aa\u00ab\u0001\u0000"+
		"\u0000\u0000\u00ab$\u0001\u0000\u0000\u0000\u00ac\u00b0\u0007\u0003\u0000"+
		"\u0000\u00ad\u00af\u0007\u0004\u0000\u0000\u00ae\u00ad\u0001\u0000\u0000"+
		"\u0000\u00af\u00b2\u0001\u0000\u0000\u0000\u00b0\u00ae\u0001\u0000\u0000"+
		"\u0000\u00b0\u00b1\u0001\u0000\u0000\u0000\u00b1&\u0001\u0000\u0000\u0000"+
		"\u00b2\u00b0\u0001\u0000\u0000\u0000\u00b3\u00b4\u0005\\\u0000\u0000\u00b4"+
		"\u00b5\u0005\'\u0000\u0000\u00b5(\u0001\u0000\u0000\u0000\u00b6\u00b7"+
		"\u0007\u0005\u0000\u0000\u00b7\u00b8\u0006\u0014\u0000\u0000\u00b8*\u0001"+
		"\u0000\u0000\u0000\u00b9\u00c3\u0005>\u0000\u0000\u00ba\u00bb\u0005>\u0000"+
		"\u0000\u00bb\u00c3\u0005=\u0000\u0000\u00bc\u00c3\u0005<\u0000\u0000\u00bd"+
		"\u00be\u0005<\u0000\u0000\u00be\u00c3\u0005=\u0000\u0000\u00bf\u00c0\u0005"+
		"<\u0000\u0000\u00c0\u00c3\u0005>\u0000\u0000\u00c1\u00c3\u0005=\u0000"+
		"\u0000\u00c2\u00b9\u0001\u0000\u0000\u0000\u00c2\u00ba\u0001\u0000\u0000"+
		"\u0000\u00c2\u00bc\u0001\u0000\u0000\u0000\u00c2\u00bd\u0001\u0000\u0000"+
		"\u0000\u00c2\u00bf\u0001\u0000\u0000\u0000\u00c2\u00c1\u0001\u0000\u0000"+
		"\u0000\u00c3,\u0001\u0000\u0000\u0000\u00c4\u00c5\u0005:\u0000\u0000\u00c5"+
		".\u0001\u0000\u0000\u0000\u00c6\u00c7\u0005(\u0000\u0000\u00c70\u0001"+
		"\u0000\u0000\u0000\u00c8\u00c9\u0005)\u0000\u0000\u00c92\u0001\u0000\u0000"+
		"\u0000\u000b\u00007\u0082\u0095\u009a\u009d\u00a2\u00a8\u00aa\u00b0\u00c2"+
		"\u0001\u0001\u0014\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}